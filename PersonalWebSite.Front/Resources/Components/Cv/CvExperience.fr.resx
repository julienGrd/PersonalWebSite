<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="C2IDate" xml:space="preserve">
    <value>2015 (7 mois)</value>
  </data>
  <data name="C2IDescription" xml:space="preserve">
    <value>&lt;ul&gt;
&lt;li&gt;Développement de la solution AssetMonitoring, progiciel de gestion de patrimoine web et responsive destiné aux conseillers en gestion de patrimoine financier et aux clients de ceux-ci&lt;/li&gt;
&lt;li&gt;Développement Backend d'un moteur de règles de calcul des commissions versées par les banques aux conseillers selon les mouvements financiers de ses clients. &lt;/li&gt;
&lt;li&gt;Développement Backend d'un module d'import des commissions réelles versées par les banques, développement de l'algorithme de mise en relation des commissions réelles et théoriques pour y faire ressortir les écarts..&lt;/li&gt;
&lt;li&gt;Développement frontend de vues synthétisant les divergences des commissions théoriques et réelles, et des vues d'administration et de paramétrage des moteurs de calcul et d'import des commissions.&lt;/li&gt;
&lt;li&gt;Industrialisation du site : Harmonisation des frameworks. Refonte des pages Razor/jquery vers une logique SPA Knockout/WEB API. Mise en place des bonnes pratiques de développement Web et Objet. Construction du framework de développement interne. Harmonisation du design bootstrap sur l'ensemble du site.&lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="C2ISoftware" xml:space="preserve">
    <value>Asset Monitoring</value>
  </data>
  <data name="C2ITitle" xml:space="preserve">
    <value>CDI Développeur .net/web fullstack</value>
  </data>
  <data name="CteasyDate" xml:space="preserve">
    <value>2016-2018 (3 ans)</value>
  </data>
  <data name="CteasyDescription" xml:space="preserve">
    <value>&lt;ul&gt;
&lt;li&gt;Accompagnement du client dans sa stratégie digitale.Recueil des besoins, analyse, chiffrage et développements.
Travail réalisé en collaboration avec un autre freelance s’occupant plus de la gestion de
projet et d’une partie de l’architecture.&lt;/li&gt;
&lt;li&gt;2016 : Développement V3. Réécriture du site dans le CMS Umbraco et passage à ASP .NET MVC.
Développement du tunnel d’achat en SPA . Développement d’un back-end en angularJs pour le
personnel CTEasy et le service client. Mise en place de la prise de rendez-vous en ligne en développant
des connecteurs à une multitude de planificateurs utilisés par les centres de contrôle technique.&lt;/li&gt;
&lt;li&gt;2017 : Développement V4. Réécriture complète de la couche business dans une optique de maintenabilité, de performance et de qualité de service. Assainissement de la base de données. Intégration du paiement directement dans le tunnel d’achat. Paiement automatique des centres via la génération
d’un fichier de virement journalier. Traçabilité de l’intégralité des mouvements financiers pour une
génération comptable automatisé (FEC). Refonte de la gestion des logs, de l’envoie mail et sms.
Refonte graphique totale.&lt;/li&gt;
&lt;li&gt;2018 : Développement V5. Refonte complète de la logique d’offres proposés sur le site via la mise
en place du revenue management. Algorithme de calcul du planning proposé aux clients et des
tarifs portés par les créneaux horaires en fonction du modèle de Revenue Management associé au
centre. Fonctionnement en mode déconnectés avec synchronisation des créneaux libres et pris en
arrière plan ou par webHook en fonction des planificateurs. Évolution du back-end angular pour
pouvoir manipuler des modèles de vente complexe associé à chaque centre. Mise en place des types
de véhicule et énergies multiple.&lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="CteasySoftware" xml:space="preserve">
    <value>Plateforme e-commerce</value>
  </data>
  <data name="CteasyTitle" xml:space="preserve">
    <value>Freelance Développeur .net/web fullstack</value>
  </data>
  <data name="ExpertimeDate" xml:space="preserve">
    <value>2012-2013 (1 an)</value>
  </data>
  <data name="ExpertimeDescription" xml:space="preserve">
    <value>&lt;ul&gt;
&lt;li&gt;Projet d’évolution au forfait du site EvianChezVous.com/ TMA d’après-projet (6 mois) : Mise en place de l’intégration du profil professionnel, Optimisation du moteur SEO, TMA d’après projet,  paiement OneClick SogenActif, Refonte et évolution de la gestion des codes promotionnels, différentes corrections/évolutions.&lt;/li&gt;
&lt;li&gt;Projet au forfait de développement des espaces Partenaire pour Ubifrance (3 mois) : Rédactions des spécifications et mise en place de l’architecture Back Office/Front office. Développement du back office permettant aux administrateurs partenaire de personnaliser le front office, authentification SSO, développement du front office public.&lt;/li&gt;
&lt;li&gt;Projet au forfait de refonte et évolution de l’application Hermes pour Cassidian, groupe EADS (3 mois) : Migration de l’environnement Weblogic/Servlet/Jsp/ActiveX vers IIS/ASP .NET MVC 4/C#, base de données Oracle, Utilisation du framework infragistic IngniteUi, refonte graphique.&lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="ExpertimeSoftware" xml:space="preserve">
    <value>EvianChezVous, UbiFrance</value>
  </data>
  <data name="ExpertimeTitle" xml:space="preserve">
    <value>CDI Développeur .net/web fullstack</value>
  </data>
  <data name="GeckosDate" xml:space="preserve">
    <value>2019-2023 (5 ans)</value>
  </data>
  <data name="GeckosDescription" xml:space="preserve">
    <value>&lt;ul&gt;
     &lt;li&gt;En charge de la refonte technique du logiciel GECKOS, progiciel de gestion spécialisé dans le domaine médical (CMPP/CESSAD).&lt;/li&gt;
     &lt;li&gt;Stack à mon arrivé : Visual studio 2010, .net framework 4.0, Silverlight, Wcf, Entity Framework 5&lt;/li&gt;
     &lt;li&gt;Stack à mon départ : Visual studio 2022, .net 8, Blazor Server/Web assembly, CSS/SASS, API REST, Entity Framework Core 8&lt;/li&gt;
     &lt;li&gt;Travail en totale autonomie et à distance, en lien permanent avec le dirigeant de la société.&lt;/li&gt;
     &lt;li&gt;Responsabilités : analyse et compréhension de l'existant, définition de l'architecture, mise en place des normes de qualités, amélioration de l'ergonomie, développement de l'intégralité de l'application avec les dernières avancées dans le monde web et .NET&lt;/li&gt;
     &lt;li&gt;2019 : Réécriture du front Silverlight en blazor Server/Webassembly, synchronisation du code c# entre les applications pour permettre un utilisation en parallèle des deux application sur le même code.&lt;/li&gt;
     &lt;li&gt;2020 : Fiabilisation du front, déploiement progressif chez nos de client&lt;/li&gt;
     &lt;li&gt;2021 : Tentative progressive de porter le backend en .NET 7. Améliorations fonctionelles diverses (signatures électronique, système de messagerie interne/mail à travers l'application, systèmes d'alertes métiers)&lt;/li&gt;
     &lt;li&gt;2022 : Réécriture profonde de la partie métier et technique pour certifier le logiciel Geckos dans le référencement SEGUR (https://esante.gouv.fr/segur).&lt;/li&gt;
     &lt;li&gt;2023 : Finalisation du portage de l'intégralité du code, abandon de l'ancienne application et de son support, déploiement généralisé, amélioration progressive de l'ancien code&lt;/li&gt;
 &lt;/ul&gt;</value>
  </data>
  <data name="GeckosSoftware" xml:space="preserve">
    <value>Logiciel Geckos</value>
  </data>
  <data name="GeckosTitle" xml:space="preserve">
    <value>CDI Développeur .net/web fullstack</value>
  </data>
  <data name="SopraDate" xml:space="preserve">
    <value>2013-2015 (1an 7 mois)</value>
  </data>
  <data name="SopraDescription" xml:space="preserve">
    <value>&lt;ul&gt;
&lt;li&gt;Projet au forfait de refonte du système d’information Bouygues Immobilier (projet Opera), intégration dans l’équipe finance (7 personnes)&lt;/li&gt;
&lt;li&gt;Octobre – Decembre 2013 : Réalisation des POC d’interface graphique, montée en compétence sur le domaine métier finance. Lecture et analyse des specifications Frontend V0.&lt;/li&gt;
&lt;li&gt;Decembre 2013 – Juin 2014 : Développement des spécifications Frontend du module Finance pour la version V0, responsable des développements Front et référent technique.&lt;/li&gt;
&lt;li&gt;Juin – Novembre 2014 : Intégration à l’équipe de conception générale pour retour et amélioration continue du framework interne à l’application et diffusion des bonnes pratiques de développement. Etudes des spécifications V1 en préparation des développements.&lt;/li&gt; 
&lt;/ul&gt;</value>
  </data>
  <data name="SopraSoftware" xml:space="preserve">
    <value>Projet Opera</value>
  </data>
  <data name="SopraTitle" xml:space="preserve">
    <value>CDI Développeur .net/web fullstack</value>
  </data>
</root>